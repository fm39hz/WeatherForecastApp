name: "Build Android app"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: 
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      - name: Build application
        run: |
          cd android
          ./gradlew clean
          ./gradlew assembleRelease

      - name: Upload application
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 3
  deploy:
    runs-on: ubuntu:latest
    steps:
      - uses: actions/checkout@v4
      - name: "find env"
        run: |
          set | grep GITHUB_ | grep -v GITHUB_TOKEN
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}-prelease
          release_name: Release ${{ github.ref }} (prelease)
          body: |
            Test upload-to-github-release works with `actions/create-release`
          draft: false
          prerelease: true
      - uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.apk"
          release_id: ${{ steps.create_release.outputs.id }}
          overwrite: true
          verbose: true
